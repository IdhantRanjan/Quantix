{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Idhan\\\\Quantix\\\\src\\\\context\\\\AppContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\n\n// State interface\n\n// Action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Initial state\nconst initialState = {\n  currentScreen: 'welcome',\n  onboardingStep: 0,\n  user: null,\n  stocks: [],\n  news: [],\n  forumPosts: [],\n  currentStock: null,\n  loading: false,\n  error: null,\n  watchlist: [],\n  portfolio: []\n};\n\n// Reducer function\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SCREEN':\n      return {\n        ...state,\n        currentScreen: action.payload\n      };\n    case 'SET_ONBOARDING_STEP':\n      return {\n        ...state,\n        onboardingStep: action.payload\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'UPDATE_USER_PREFERENCES':\n      if (!state.user) return state;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          preferences: {\n            ...state.user.preferences,\n            ...action.payload\n          }\n        }\n      };\n    case 'SET_STOCKS':\n      return {\n        ...state,\n        stocks: action.payload\n      };\n    case 'SET_NEWS':\n      return {\n        ...state,\n        news: action.payload\n      };\n    case 'SET_FORUM_POSTS':\n      return {\n        ...state,\n        forumPosts: action.payload\n      };\n    case 'SET_CURRENT_STOCK':\n      return {\n        ...state,\n        currentStock: action.payload\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'ADD_TO_WATCHLIST':\n      if (state.watchlist.find(stock => stock.symbol === action.payload.symbol)) {\n        return state;\n      }\n      return {\n        ...state,\n        watchlist: [...state.watchlist, action.payload]\n      };\n    case 'REMOVE_FROM_WATCHLIST':\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(stock => stock.symbol !== action.payload)\n      };\n    case 'ADD_TO_PORTFOLIO':\n      const existingIndex = state.portfolio.findIndex(item => item.symbol === action.payload.symbol);\n      if (existingIndex >= 0) {\n        const updatedPortfolio = [...state.portfolio];\n        updatedPortfolio[existingIndex] = action.payload;\n        return {\n          ...state,\n          portfolio: updatedPortfolio\n        };\n      }\n      return {\n        ...state,\n        portfolio: [...state.portfolio, action.payload]\n      };\n    case 'UPDATE_PORTFOLIO':\n      return {\n        ...state,\n        portfolio: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n// Context\n\nconst AppContext = /*#__PURE__*/createContext(undefined);\n\n// Provider component\n\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use the context\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","currentScreen","onboardingStep","user","stocks","news","forumPosts","currentStock","loading","error","watchlist","portfolio","appReducer","state","action","type","payload","preferences","find","stock","symbol","filter","existingIndex","findIndex","item","updatedPortfolio","AppContext","undefined","AppProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Idhan/Quantix/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { User, Stock, NewsItem, ForumPost, PortfolioItem, UserPreferences } from '../types';\n\n// State interface\ninterface AppState {\n  currentScreen: string;\n  onboardingStep: number;\n  user: User | null;\n  stocks: Stock[];\n  news: NewsItem[];\n  forumPosts: ForumPost[];\n  currentStock: Stock | null;\n  loading: boolean;\n  error: string | null;\n  watchlist: Stock[];\n  portfolio: PortfolioItem[];\n}\n\n// Action types\ntype AppAction =\n  | { type: 'SET_SCREEN'; payload: string }\n  | { type: 'SET_ONBOARDING_STEP'; payload: number }\n  | { type: 'SET_USER'; payload: User | null }\n  | { type: 'UPDATE_USER_PREFERENCES'; payload: Partial<UserPreferences> }\n  | { type: 'SET_STOCKS'; payload: Stock[] }\n  | { type: 'SET_NEWS'; payload: NewsItem[] }\n  | { type: 'SET_FORUM_POSTS'; payload: ForumPost[] }\n  | { type: 'SET_CURRENT_STOCK'; payload: Stock | null }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'ADD_TO_WATCHLIST'; payload: Stock }\n  | { type: 'REMOVE_FROM_WATCHLIST'; payload: string }\n  | { type: 'ADD_TO_PORTFOLIO'; payload: PortfolioItem }\n  | { type: 'UPDATE_PORTFOLIO'; payload: PortfolioItem[] };\n\n// Initial state\nconst initialState: AppState = {\n  currentScreen: 'welcome',\n  onboardingStep: 0,\n  user: null,\n  stocks: [],\n  news: [],\n  forumPosts: [],\n  currentStock: null,\n  loading: false,\n  error: null,\n  watchlist: [],\n  portfolio: []\n};\n\n// Reducer function\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case 'SET_SCREEN':\n      return { ...state, currentScreen: action.payload };\n    \n    case 'SET_ONBOARDING_STEP':\n      return { ...state, onboardingStep: action.payload };\n    \n    case 'SET_USER':\n      return { ...state, user: action.payload };\n    \n    case 'UPDATE_USER_PREFERENCES':\n      if (!state.user) return state;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          preferences: { ...state.user.preferences, ...action.payload }\n        }\n      };\n    \n    case 'SET_STOCKS':\n      return { ...state, stocks: action.payload };\n    \n    case 'SET_NEWS':\n      return { ...state, news: action.payload };\n    \n    case 'SET_FORUM_POSTS':\n      return { ...state, forumPosts: action.payload };\n    \n    case 'SET_CURRENT_STOCK':\n      return { ...state, currentStock: action.payload };\n    \n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'ADD_TO_WATCHLIST':\n      if (state.watchlist.find(stock => stock.symbol === action.payload.symbol)) {\n        return state;\n      }\n      return { ...state, watchlist: [...state.watchlist, action.payload] };\n    \n    case 'REMOVE_FROM_WATCHLIST':\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(stock => stock.symbol !== action.payload)\n      };\n    \n    case 'ADD_TO_PORTFOLIO':\n      const existingIndex = state.portfolio.findIndex(item => item.symbol === action.payload.symbol);\n      if (existingIndex >= 0) {\n        const updatedPortfolio = [...state.portfolio];\n        updatedPortfolio[existingIndex] = action.payload;\n        return { ...state, portfolio: updatedPortfolio };\n      }\n      return { ...state, portfolio: [...state.portfolio, action.payload] };\n    \n    case 'UPDATE_PORTFOLIO':\n      return { ...state, portfolio: action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Context\ninterface AppContextType {\n  state: AppState;\n  dispatch: React.Dispatch<AppAction>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\n// Provider component\ninterface AppProviderProps {\n  children: ReactNode;\n}\n\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Hook to use the context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}